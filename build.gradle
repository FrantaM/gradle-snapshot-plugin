/**
 * A Gradle plugin to generate build metadata from Source Control Management (SCM) tools.
 */

apply plugin: 'groovy'
apply plugin: 'signing'
apply plugin: 'maven-publish'
apply plugin: 'idea'

group   = 'me.cmoz.gradle'
version = '2.0.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url 'http://maven.tmatesoft.com/content/repositories/releases/'
    }
}

configurations {
    providedCompile
}

sourceSets {
    main {
        compileClasspath += configurations.providedCompile
    }

    test {
        compileClasspath += configurations.providedCompile
    }
}

dependencies {
    providedCompile(
        [group: 'org.projectlombok', name: 'lombok', version: '1.14.4'],
        [group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.0']
    )

    compile(
        gradleApi(),
        [group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '3.4.1.201406201815-r'],
        [group: 'org.tmatesoft.hg4j', name: 'hg4j', version: '1.1.0']
    )

    testCompile(
        localGroovy(),
        [group: 'junit', name: 'junit', version: '4.11'],
        [group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3']
    )
}

compileJava {
    sourceCompatibility = '1.6'
    targetCompatibility = '1.6'
    options.compilerArgs = [
        // enable all warnings as errors
        '-Xlint:cast,deprecation,divzero,empty,unchecked,fallthrough,path,serial,finally,overrides,-options',
        '-Werror',
        '-XprintProcessorInfo'
    ]
    options.encoding = 'UTF-8'
    options.fork = true
}

jar {
    manifest {
        attributes 'Implementation-Title': project.name,
                   'Implementation-Version': project.version,
                   'Created-By': "Gradle $gradle.gradleVersion",
                   'Build-Jdk': System.properties['java.version']
    }
}

javadoc {
    classpath += configurations.providedCompile
}

task javadocJar(type: Jar) {
    from javadoc
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

signing {
    if (!version.endsWith('SNAPSHOT')) {
        sign configurations.archives
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java

            artifact javadocJar {
                classifier 'javadoc'
            }

            artifact sourceJar {
                classifier 'sources'
            }

            pom.withXml {
                def root = asNode()
                root.appendNode('name', 'Gradle Snapshot Plugin')
                root.appendNode('description', 'Snapshot plugin for the Gradle build system.')
                root.appendNode('url', 'http://github.com/novabyte/gradle-snapshot-plugin')
                root.appendNode('inceptionYear', '2012')

                def developer = root.appendNode('developers').appendNode('developer')
                developer.appendNode('id', 'novabyte')
                developer.appendNode('name', 'Chris Molozian')
                developer.appendNode('email', 'chris@cmoz.me')

                def scm = root.appendNode('scm')
                scm.appendNode('url', 'http://github.com/novabyte/gradle-snapshot-plugin')
                scm.appendNode('connection', 'scm:git://github.com/novabyte/gradle-snapshot-plugin.git')
                scm.appendNode('developerConnection', 'scm:git@github.com:novabyte/gradle-snapshot-plugin.git')

                def license = root.appendNode('licenses').appendNode('license')
                license.appendNode('name', 'The Apache Software License, Version 2.0')
                license.appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.txt')
                license.appendNode('distribution', 'repo')
            }
        }
    }

    repositories {
        maven {
            credentials {
                username project.properties['sonatypeUsername']
                password project.properties['sonatypePassword']
            }
            if (!version.endsWith('SNAPSHOT')) {
                url 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
            } else {
                url 'https://oss.sonatype.org/content/repositories/snapshots'
            }
        }
    }
}
