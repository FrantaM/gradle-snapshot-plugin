/**
 * Snapshot is a Gradle plugin for generating build metadata from Source Control
 * Management (SCM) tools.
 */

/*
buildscript {
    repositories {
        add(new org.apache.ivy.plugins.resolver.URLResolver()) {
            name = 'GitHub'
            addArtifactPattern 'http://cloud.github.com/downloads/[organisation]/[module]/[module]-[revision].[ext]'
        }
    }
    dependencies {
        classpath 'PieceOf8:gradle-snapshot-plugin:0.1.2'
    }
}
*/

apply plugin: "java"
//apply plugin: "snapshot"
apply plugin: "eclipse"
apply plugin: "idea"

sourceCompatibility = 1.6
targetCompatibility = 1.6

tasks.withType(Compile).all {
    // enable all warnings as errors
    options.compilerArgs << "-Xlint:{all}" << "-Werror"
    options.encoding = "UTF-8"
    options.optimize = true
}

groupId  = "com.pieceof8.gradle"
artifact = "snapshot"
version  = "0.1.2-SNAPSHOT"

repositories {
    mavenCentral()
}

configurations {
    plugin
    compileOnly
    testCompileOnly { extendsFrom compileOnly }
}

sourceSets {
    main { compileClasspath += configurations.compileOnly }
    test { compileClasspath += configurations.compileOnly + configurations.testCompileOnly }
}

dependencies {
    compileOnly group: "org.projectlombok", name: "lombok", version: "0.10.8"
    compile gradleApi()

    compile(
        [group: "org.eclipse.jgit", name: "org.eclipse.jgit", version: "1.3.0.201202151440-r"]
    )

    // dependencies to package with the plugin
    plugin(
        [group: "org.eclipse.jgit", name: "org.eclipse.jgit", version: "1.3.0.201202151440-r"]
    )
}

jar {
    dependsOn configurations.plugin

    manifest {
        attributes "Implementation-Title": project.name,
                   "Implementation-Version": version.toString(),
                   "Created-By": "Gradle " + gradle.gradleVersion,
                   "Build-Jdk": System.properties['java.version'],
                   "Manifest-Version": 1.0
    }

    // adds runtime dependencies to jar package
    from(configurations.plugin.collect { it.isDirectory() ? it : zipTree(it) }) {
        // remove all signature files
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
}

/*
snapshot {
    filename = "git.properties"
}
*/

eclipse {
    classpath { plusConfigurations += configurations.compileOnly }
}
